<wiki:toc max_depth="4" />

===报表===


====明确需求====

1. 统计范围，是月报表还是合计报表

2. 查询条件，是日期范围还是需要按类别，线路等条件

3. 是否需要输出全部仪表，包括没有记录

4. 作用于原始数据还是当前数据

5. 排序等其它条件

以遵义报表为例，我们可以明确


月报表，查询条件是按月，仅作用有数据的报表，按类别和电压等级排序，同类单元格合并，计算分类合格率和综合合格率


==== 全部数据约束====

1. 用户只能查看自己所在单位下属线路的仪表记录

2. 如果定义了线路权限，则只能查看该线路权限下的记录

3. 仪表的参与统计为1

4. 仪表所在类别的排除为0

下面是例子的sql
{{{

declare @user_id int

select @user_id=1
select  * from devices 

inner join circuitry on devices.circuitry_id=circuitry.id

inner join dataarea on circuitry.dataarea_id=dataarea.id
where device_report_status=1 and devices.category_id in (select id from category where exclude=0)     and dataarea.lcode like (select lcode from users inner join dataarea on users.dataarea_id=dataarea.id where users.id=@user_id)+'%'  and 
 (not exists(select * from circuitry_permission where user_id=@user_id) or 
 (devices.circuitry_id in (select circuitry_id from circuitry_permission where user_id=@user_id)))

}}}


====约定====

1. 综合电压合格率运算按仪表类别中设定的比率进行

2. 城市、农村的区分按仪表定义中的城市农村的设定进行

====流程====

1. aot - reports - 新建

设置name/template 属性，如 TutorialReport/reports/tutorial.xls

编辑代码，将TReportRun修改为TFlexReportRun,表示使用flexcel 引擎

2. 点击querites, -新建 创建查询 months
{{{
select * from months order by year,month
}}}


3.  创建tutorial.xls excel文件并定义模板

.net <#数据集名称.字段名>  <#变量名>

marsx <##数据集名称##字段名> <#.变量名>

名称 __数据集名称__

注：如果使用报表变量，则报表变量必须在一个名称中，一般建议使用__main__

4.  在BeforeRun中写代码
{{{

var
    sql:TSql;   
    dt:TDAMemDataTable;
begin
    inherited;
    sql:=GetSql('months');
    dt:=TDAMemDataTable.Create(self);  
    sql.ExecDataTable(dt);          
    dt.Dataset.name:='months';
    DataModule.insertComponent(dt.dataSet); 
    addReportVariable('test1','this is test1');

}}}

5. 创建menuitem,如TutorialReportMenuItem, ObjectType为otReport,ObjectId 引用该报表

6. 创建menu ,menuItemId引用TutorialReportMenuitem

7. 刷新导航，测试



====建议=====

1. 不建议在sql 中计算超限率和合格率

如果在sql 中计算，则必须判断运行总时为零的情况

月报表时

{{{

 (case when total_time=0 then 0 else (total_time-hi_time-low_time)/total_time end ) as pass_rate

}}}

或汇总时

{{{ 

(case when sum(total_time)=0 then 0 else (sum(total_time)-sum(hi_time)-sum(low_time))/sum(total_time end ) as pass_rate

}}}


2. 显示所有仪表，则必须将数据部分放到子查询中
